#!/bin/bash
################################################################################
# leveldb のライブラリをコンパイルして jar をproject/lib 配下にセットする.
################################################################################
COMPONENT_NAME=leveljs

# 現在のパスを保持.
NOW_PATH=` pwd`

# プロジェクトパス.
PROJECT_PATH="${RHIGIN_HOME}/../.."

# コンポーネントパスをセット.
COMPONENT_PATH="${RHIGIN_HOME}/../components/${COMPONENT_NAME}"

#############################################
# leveldbプロジェクト を cloneしてコンパイル.
#############################################

# leveldbのパスを取得.
LEVELDB_PATH="${PROJECT_PATH}/leveldb"

# leveldbのプロジェクトフォルダが存在するかチェック.
if [ -f ${LEVELDB_PATH}/build.xml ]; then
    # 更新チェック.
    cd ${LEVELDB_PATH}
    git pull origin master;
else
    # 存在しない場合は、gitからclone.
    cd ${PROJECT_PATH}
    git clone https://github.com/maachang/leveldb.git
    if [ $? != 0 ]; then
        cd ${NOW_PATH}
        exit 1
    fi
fi

# leveldbパスに移動.
cd ${LEVELDB_PATH}
if [ $? != 0 ]; then
    cd ${NOW_PATH}
    echo "The specified leveldb path does not exist: ${LEVELDB_PATH}"
    exit 1
fi

# leveldb のコンパイル.
ant clean
ant
if [ $? != 0 ]; then
    cd ${NOW_PATH}
    exit 1
fi

# コンパイル結果の jar ファイルを leveljs コンポーネント のライブラリに 削除 or コピー.
rm -Rf ${COMPONENT_PATH}/project/lib/leveldb-*.jar
mkdir -p ${COMPONENT_PATH}/project/lib/
cp leveldb-*.jar ${COMPONENT_PATH}/project/lib/

cd ${NOW_PATH}
exit 0